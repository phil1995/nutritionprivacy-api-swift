//
// Proteins.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Proteins: Codable, JSONEncodable, Hashable {

    static let caseinRule = NumericRule<Double>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    static let serumProteinsRule = NumericRule<Double>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    /** Casein measured in gram */
    public var casein: Double?
    /** Serum proteins measured in gram */
    public var serumProteins: Double?

    public init(casein: Double? = nil, serumProteins: Double? = nil) {
        self.casein = casein
        self.serumProteins = serumProteins
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case casein
        case serumProteins
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(casein, forKey: .casein)
        try container.encodeIfPresent(serumProteins, forKey: .serumProteins)
    }
}

