//
// Carbohydrates.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Carbohydrates: Codable, JSONEncodable, Hashable {

    /** Total sugars measured in gram */
    public var sugars: Double?
    /** Sucrose measured in gram */
    public var sucrose: Double?
    /** Glucose measured in gram */
    public var glucose: Double?
    /** Fructose measured in gram */
    public var fructose: Double?
    /** Lactose measured in gram */
    public var lactose: Double?
    /** Maltose measured in gram */
    public var maltose: Double?
    /** Maltodextrins measured in gram */
    public var maltodextrins: Double?
    /** Starch measured in gram */
    public var starch: Double?
    /** Polyols measured in gram */
    public var polyols: Double?

    public init(sugars: Double? = nil, sucrose: Double? = nil, glucose: Double? = nil, fructose: Double? = nil, lactose: Double? = nil, maltose: Double? = nil, maltodextrins: Double? = nil, starch: Double? = nil, polyols: Double? = nil) {
        self.sugars = sugars
        self.sucrose = sucrose
        self.glucose = glucose
        self.fructose = fructose
        self.lactose = lactose
        self.maltose = maltose
        self.maltodextrins = maltodextrins
        self.starch = starch
        self.polyols = polyols
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case sugars
        case sucrose
        case glucose
        case fructose
        case lactose
        case maltose
        case maltodextrins
        case starch
        case polyols
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(sugars, forKey: .sugars)
        try container.encodeIfPresent(sucrose, forKey: .sucrose)
        try container.encodeIfPresent(glucose, forKey: .glucose)
        try container.encodeIfPresent(fructose, forKey: .fructose)
        try container.encodeIfPresent(lactose, forKey: .lactose)
        try container.encodeIfPresent(maltose, forKey: .maltose)
        try container.encodeIfPresent(maltodextrins, forKey: .maltodextrins)
        try container.encodeIfPresent(starch, forKey: .starch)
        try container.encodeIfPresent(polyols, forKey: .polyols)
    }
}

